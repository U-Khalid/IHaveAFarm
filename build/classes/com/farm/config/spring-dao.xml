<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd 
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd">

    <description>Spring dao配置</description>
    
    <!-- 1.数据源配置, 使用c3p0 -->
    <context:property-placeholder location="classpath:/com/farm/config/c3p0-config.properties"/>
    <!-- 2. --> 
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- Connection Info -->
        <property name="driverClass" value="${jdbc.driverClass}" />
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
        <property name="user" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />

          <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->   
       <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/> 
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->   
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>  
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>  
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>  
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->   
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/> 
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->   
         <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/> 
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements   
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。   
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->   
        <!-- <property name="maxStatements" value="${c3p0.maxStatements}"/>    -->
        <!-- c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能 通过  
                                  多线程实现多个操作同时被执行。Default: 3-->   
        <property name="numHelperThreads" value="${c3p0.numHelperThreads}"/> 
        <!-- 超时时间设置 -->
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"></property>
        <!-- 重试次数 -->
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"></property>
    </bean>

	<!-- 3.使用MyBatis操作数据库，替代以前使用的JdbcTemplate
          spring与myBatis整合，给myBatis框架配置执行环境 
                           创建SqlSessionFactory，同时指定数据源
     -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	 <!-- 使用ioc容器管理的数据源 -->
     	<property name="dataSource" ref="dataSource"></property>
     	<!-- 设置MyBatis全局配置文件所在的位置 -->
     	<property name="configLocation" value="classpath:com/farm/config/mybatisConfig.xml"></property>
     	<property name="typeAliasesPackage" value="com.farm.entity"></property>
     	<property name="mapperLocations" value="classpath:com/farm/mapper/*.xml"></property>
     </bean>
     
     <!--  4.配置扫描Dao接口，动态实现Dao接口，注入到spring容器中 -->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     	<!-- 注入sqlSessionFactory -->
     	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
     	<!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.farm.dao" />
    </bean> 


</beans>