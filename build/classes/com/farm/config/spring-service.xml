<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd 
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

    <description>Spring service配置</description>
 	
    <!-- 开启定时任务 -->
    <task:annotation-driven/>
  
    <!-- 扫描service下所有使用注解的类型 -->
    <context:component-scan base-package="com.farm.service"/>
    <context:component-scan base-package="com.farm.task" />  
    
    <!--使用Spring完成事务控制 -->
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 开启基于注解的事务管理默认使用注解来管理事物行为-->
    <tx:annotation-driven transaction-manager="transactionManager" order="2"/>
    
    
    <!-- 要想让Spring完成事务控制，必须使用Spring能操作的SqlSession，因此配置下面的SqlSessionTemplate
		        并使用上边配置好的工厂来获取SqlSessionTemplate对象
		        这个对象就是openSession拿到的那个对象，可以与数据库建立会话
		          SqlSessionTemplate和我们openSession拿到的对象功能类似 
		        可以声明为属性，线程安全
	 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
       <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
       <!-- 这个执行器会批量执行更新语句, 还有SIMPLE 和 REUSE -->
       <!-- <constructor-arg index="1" value="BATCH" /> -->
    </bean>
    
   <!--  <bean id="aspectPermission" class="com.farm.filter.PermissionAspect" />
    
    对带有@ValidatePermission和ResponseBody注解的controller包及其子包所有方法执行功能权限校验  
    <aop:config proxy-target-class="true">  
        <aop:aspect ref="aspectPermission">  
            <aop:pointcut id="pc"  
                expression="execution(* com.farm.service..*.*(..)) " />  
            <aop:before pointcut-ref="pc" method="doBefore"/>  
        </aop:aspect>  
    </aop:config> -->
    
</beans>